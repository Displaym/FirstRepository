#include <iostream>

using namespace std;

int main() {
  enum paytype { CARD, CHECK
  };
  paytype ptype;
  union payment {
    char card[25];
    long check;
  }
  info;
  // присваивание значений info и ptype
  switch(ptype) {
    case CARD: cout << "Оплата по карте: " << info.card;
    break;
    case CHECK: cout << "Оплата чеком " << info.check;
    break;
  }
return 0;
}
//////////////////////////////////////////////////////////////////////////////////////////////
#include <iostream>

using namespace std;

int main() {
  enum paytype {CARD, CHECK}ptype;
  struct {
    //paytype ptype;
    union payment {
      char card[25];
      long check;
    };
  }
  info;
  switch(ptype) {
    case CARD: cout << "Оплата по карте: " << info.card;
    break;
    case CHECK: cout << "Оплата чеком: " << info.check;
    break;
  }
return 0;
}
/////////////////////////////////////////////////////////////////////////////
#include <iostream>

using namespace std;

int main() {
  //анонимное объединение
  union {
    short int count;
    char ch[2];
  }
  //как происходит непосредственные обращения к членам анонимного объединения//
  ch[0] = 'X';
  ch[1] = 'Y';
  cout << "Объединение в виде символов: " << ch[0] << ch[1] << endl;
  cout << "Объединение в виде целого значения: " << count << endl;
return 0;
}
